{"ast":null,"code":"var _jsxFileName = \"/home/elmersv/Proyectos/PFinal/Proyecto/Prueba/evaluacion8proyectofinal-equipo-48/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\n//axios es algo extra que te permite hacer consultas a la api mas EZ de lo que es \nimport axios from 'axios';\nimport { useNavigate } from 'react-router';\nimport { ToastContainer, toast } from 'react-toastify'; //el toastify es una madre bien bonita para tirar alertas ahi lo probas\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport React, { useRef } from 'react';\nimport { UsersIcon, KeyIcon } from '@heroicons/react/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  //variables para poder almacenar y lo de navigate siempre para poder cambiar de paginas \n  const navigate = useNavigate();\n  const username = useRef(null);\n  const password = useRef(null); //esta funcion lo que hace es que checkee que tenga todo de los usuarios y tira errors o warnings \n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const usernameValue = username.current.value;\n    const passwordValue = password.current.value;\n\n    if (!usernameValue || !passwordValue) {\n      toast('Alguno de los campos esta vacio', {\n        type: 'warning'\n      }); //una warning de que cuando meten usuario o contra y alguno quedo vacio les avisa \n\n      return;\n    }\n\n    try {\n      const response = await axios.post('https://posts-pw2021.herokuapp.com/api/v1/auth/signin', {\n        username: usernameValue,\n        password: passwordValue\n      }); // esto es lo que te digo de axio que es para consultas \n      //if para que checke que todo esta bien y si lo esta te manda a \"home\" lo podes cambiar el nombre pero aja hay que cambiarlo en todo lo de \"home\"\n\n      if (response.status === 200) {\n        localStorage.setItem('token', response.data.token);\n        navigate('/');\n      }\n    } catch (error) {\n      //aqui como dice te busca si hay un error y te manda una alerta de las bonitas de toasty \n      const {\n        response\n      } = error;\n      let mssg = 'unknown error';\n      if (response.status === 401) mssg = 'Credenciales erroneas';else if (response.status === 500) mssg = 'Error de servidor';else if (response.status === 404) mssg = 'Usuario no encontrado';\n      toast(mssg, {\n        type: 'error'\n      });\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    //aqui esta el inicio ya de lo de la pantalla de login que tiene lo del toast para las notificaciones y pues de ahi es html para poner todo \n    _jsxDEV(\"form\", {\n      className: \"items-center w-80 max-w-screen-sm mx-auto h-screen text-black flex flex-col justify-center md:w-auto\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg rounded-3x1 px-20 py-20 space-y-6 bg-gray-100 \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-lg front-medium inline-flex \",\n            htmlFor: \"1-username\",\n            children: [/*#__PURE__*/_jsxDEV(UsersIcon, {\n              className: \"h-5 w-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), \"username\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rounded-lg px-2 py-1 text-gray-800 bg-gray-200 \",\n            id: \"1-username\",\n            type: \"text\",\n            placeholder: \"Username\",\n            ref: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-lg front-medium inline-flex\",\n            htmlFor: \"1-password\",\n            children: [/*#__PURE__*/_jsxDEV(KeyIcon, {\n              className: \"h-5 w-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), \"password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"bg-gray-200 rounded-lg px-2 py-1 text-gray-800\",\n            id: \"1-password\",\n            type: \"password\",\n            placeholder: \"****\",\n            ref: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-full bg-indigo-500 rounded-lg py-2\",\n          type: \"submit\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Login, \"2T7vOw97GEPVXWv5VbBLGJn1m88=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/elmersv/Proyectos/PFinal/Proyecto/Prueba/evaluacion8proyectofinal-equipo-48/src/Components/Login.js"],"names":["axios","useNavigate","ToastContainer","toast","React","useRef","UsersIcon","KeyIcon","Login","navigate","username","password","onSubmit","e","preventDefault","usernameValue","current","value","passwordValue","type","response","post","status","localStorage","setItem","data","token","error","mssg"],"mappings":"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","sourcesContent":["//axios es algo extra que te permite hacer consultas a la api mas EZ de lo que es \nimport axios from 'axios';\nimport { useNavigate } from 'react-router'; \nimport { ToastContainer, toast } from 'react-toastify'; //el toastify es una madre bien bonita para tirar alertas ahi lo probas\nimport 'react-toastify/dist/ReactToastify.css';\nimport React, { useRef } from 'react';\nimport { UsersIcon, KeyIcon } from '@heroicons/react/outline';\n\nconst Login = () => {\n    //variables para poder almacenar y lo de navigate siempre para poder cambiar de paginas \n    const navigate = useNavigate();\n    const username = useRef(null);\n    const password = useRef(null);\n    //esta funcion lo que hace es que checkee que tenga todo de los usuarios y tira errors o warnings \n    async function onSubmit(e) {\n        e.preventDefault();\n        const usernameValue = username.current.value;\n        const passwordValue = password.current.value;\n        if (!usernameValue || !passwordValue) {\n            toast('Alguno de los campos esta vacio', { type: 'warning' }); //una warning de que cuando meten usuario o contra y alguno quedo vacio les avisa \n            return;\n        }\n        try {\n            const response = await axios.post('https://posts-pw2021.herokuapp.com/api/v1/auth/signin', { username: usernameValue, password: passwordValue }); // esto es lo que te digo de axio que es para consultas \n            //if para que checke que todo esta bien y si lo esta te manda a \"home\" lo podes cambiar el nombre pero aja hay que cambiarlo en todo lo de \"home\"\n            if (response.status === 200) {\n                localStorage.setItem('token', response.data.token);\n                navigate('/');\n            }\n        } catch (error) { //aqui como dice te busca si hay un error y te manda una alerta de las bonitas de toasty \n            const { response } = error;\n            let mssg = 'unknown error';\n            if (response.status === 401) mssg = 'Credenciales erroneas';\n            else if (response.status === 500) mssg = 'Error de servidor';\n            else if (response.status === 404) mssg = 'Usuario no encontrado';\n            toast(mssg, { type: 'error' });\n        }\n    }\n    return (\n        //aqui esta el inicio ya de lo de la pantalla de login que tiene lo del toast para las notificaciones y pues de ahi es html para poner todo \n        <form className=\"items-center w-80 max-w-screen-sm mx-auto h-screen text-black flex flex-col justify-center md:w-auto\" onSubmit={onSubmit}>\n            <ToastContainer /> \n            <div className=\"rounded-lg rounded-3x1 px-20 py-20 space-y-6 bg-gray-100 \"> \n                <div className=\"flex flex-col space-y-2\">\n                    <label className=\"text-lg front-medium inline-flex \" htmlFor=\"1-username\">\n                        <UsersIcon className=\"h-5 w-5 mr-2\" /> \n                        username\n                    </label>\n                    <input className=\"rounded-lg px-2 py-1 text-gray-800 bg-gray-200 \" id=\"1-username\" type=\"text\" placeholder=\"Username\" ref={username} />\n                </div>\n\n                <div className=\"flex flex-col space-y-2\">\n                    <label className=\"text-lg front-medium inline-flex\" htmlFor=\"1-password\">\n                        <KeyIcon className=\"h-5 w-5 mr-2\" />\n                        password\n                    </label>\n                    <input className=\"bg-gray-200 rounded-lg px-2 py-1 text-gray-800\" id=\"1-password\" type=\"password\" placeholder=\"****\" ref={password} />\n                </div>\n                <button className=\"w-full bg-indigo-500 rounded-lg py-2\" type=\"submit\">login</button>\n            </div>\n        </form>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}